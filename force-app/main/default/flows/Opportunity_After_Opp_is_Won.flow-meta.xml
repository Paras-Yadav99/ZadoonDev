<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Payment_Received_tell_Opportunity_Primary_Contact</description>
        <name>Payment_Received_tell_Opportunity_Primary_Contact</name>
        <label>Payment Received tell Opportunity Primary Contact</label>
        <locationX>50</locationX>
        <locationY>1295</locationY>
        <actionName>Opportunity.Opp_Won_Payment_Recieved</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Office_Manager_present_D1</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>56.0</apiVersion>
    <decisions>
        <description>Decision_if_Buyer_Primary_Contact_exists_send_mail</description>
        <name>Decision_if_Buyer_Primary_Contact_exists_send_mail</name>
        <label>Decision if Buyer Primary Contact exists send mail</label>
        <locationX>182</locationX>
        <locationY>1175</locationY>
        <defaultConnector>
            <targetReference>Office_Manager_present_D1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Buyer_primary_Contact_exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Buyer_Primary_Contact__r.FirstName</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Payment_Received_tell_Opportunity_Primary_Contact</targetReference>
            </connector>
            <label>Buyer primary Contact exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Office_Manager_present_D1</description>
        <name>Office_Manager_present_D1</name>
        <label>Office Manager present D1</label>
        <locationX>182</locationX>
        <locationY>1511</locationY>
        <defaultConnector>
            <targetReference>User_Admin_1_present_D1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Office_Manager_present1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_User_Office_Manager</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>task_for_Sending_Paid_Invoice</targetReference>
            </connector>
            <label>Office Manager present1</label>
        </rules>
    </decisions>
    <decisions>
        <description>Opp_Forecast_Category_Closed_Decision</description>
        <name>Opp_Forecast_Category_Closed_Decision</name>
        <label>Opp Forecast Category Closed Decision</label>
        <locationX>336</locationX>
        <locationY>1055</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Forecast_Category_Closed_Decision</name>
            <conditionLogic>1 AND 2 AND (3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ForecastCategory</leftValueReference>
                <operator>IsChanged</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.ForecastCategory</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>get_Broker_sell_record_type_related_to_opp.Id</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>get_Inventory_sell_record_type_related_to_opp.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Decision_if_Buyer_Primary_Contact_exists_send_mail</targetReference>
            </connector>
            <label>Forecast Category Closed Decision</label>
        </rules>
    </decisions>
    <decisions>
        <description>User_Admin_1_present_D1</description>
        <name>User_Admin_1_present_D1</name>
        <label>User Admin 1 present D1</label>
        <locationX>182</locationX>
        <locationY>2087</locationY>
        <defaultConnector>
            <targetReference>User_VA_present_D1</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>User_Admin_1_present1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_User_Admin_1</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>task_for_Sold_post_on_FB_LI</targetReference>
            </connector>
            <label>User Admin 1 present1</label>
        </rules>
    </decisions>
    <decisions>
        <description>User_VA_present_D1</description>
        <name>User_VA_present_D1</name>
        <label>User VA present D1</label>
        <locationX>182</locationX>
        <locationY>2423</locationY>
        <defaultConnector>
            <targetReference>task_for_Review_Won_Opp_follow_up</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>User_VA_present1</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_User_VA</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>task_for_Unlisting_from_MT_IC_CL</targetReference>
            </connector>
            <label>User VA present1</label>
        </rules>
    </decisions>
    <description>Opportunity_After_Opp_is_Won</description>
    <environments>Default</environments>
    <formulas>
        <description>After14Days</description>
        <name>After14Days</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 14</expression>
    </formulas>
    <formulas>
        <description>After1Day</description>
        <name>After1Day</name>
        <dataType>Date</dataType>
        <expression>TODAY()+1</expression>
    </formulas>
    <formulas>
        <description>After2Days</description>
        <name>After2Days</name>
        <dataType>Date</dataType>
        <expression>TODAY()+2</expression>
    </formulas>
    <formulas>
        <description>After30Days</description>
        <name>After30Days</name>
        <dataType>Date</dataType>
        <expression>TODAY()+30</expression>
    </formulas>
    <formulas>
        <description>After3Days</description>
        <name>After3Days</name>
        <dataType>Date</dataType>
        <expression>TODAY()+3</expression>
    </formulas>
    <formulas>
        <description>After7Days</description>
        <name>After7Days</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 7</expression>
    </formulas>
    <formulas>
        <description>emailsearchtasksubject</description>
        <name>emailsearchtasksubject</name>
        <dataType>String</dataType>
        <expression>&apos;Look for WTB: &apos; + {!$Record.WTB_Parameters__c}</expression>
    </formulas>
    <formulas>
        <description>FB_LI_Day_1_Next_Month_Due_Date</description>
        <name>FB_LI_Day_1_Next_Month_Due_Date</name>
        <dataType>Date</dataType>
        <expression>DATE(YEAR(TODAY()),MONTH(TODAY())+1, 1)</expression>
    </formulas>
    <formulas>
        <description>OpportunityName</description>
        <name>OpportunityName</name>
        <dataType>String</dataType>
        <expression>{!$Record.Year_from_Unit__c} + &apos; &apos; + {!$Record.Model_from_Unit__c} + &apos; &apos; + {!$Record.Account.Name} + &apos; &apos; + {!$Record.Product__c}</expression>
    </formulas>
    <formulas>
        <description>today</description>
        <name>TODAY</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <formulas>
        <description>WaitingForBuyerWireTaskSubject</description>
        <name>WaitingForBuyerWireTaskSubject</name>
        <dataType>String</dataType>
        <expression>&quot;Wire should be coming in for $&quot; + TEXT({!$Record.Total_Cost__c}) + &quot;. Once received, move opp to delivering (if we are doing freight) or closed won stage&quot;</expression>
    </formulas>
    <interviewLabel>Opportunity - {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Opportunity - After Opp is Won</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>task_for_Adding_wire_info_to_QBO</description>
        <name>task_for_Adding_wire_info_to_QBO</name>
        <label>task for Adding wire info to QBO</label>
        <locationX>50</locationX>
        <locationY>1751</locationY>
        <connector>
            <targetReference>task_for_Ensuring_GP_is_accurate</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Record.CloseDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>get_User_Office_Manager.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Add wire transfer collateral to QBO transaction</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Task_Type__c</field>
            <value>
                <stringValue>Finance</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>task_for_Ensuring_GP_is_accurate</description>
        <name>task_for_Ensuring_GP_is_accurate</name>
        <label>task for Ensuring GP is accurate</label>
        <locationX>50</locationX>
        <locationY>1871</locationY>
        <connector>
            <targetReference>User_Admin_1_present_D1</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Record.CloseDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>get_User_Office_Manager.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Update Opp GP to reflect correct GP amount</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Task_Type__c</field>
            <value>
                <stringValue>Sales Administration</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>task_for_Review_Won_Opp_follow_up</description>
        <name>task_for_Review_Won_Opp_follow_up</name>
        <label>task for Review/Won Opp follow up</label>
        <locationX>182</locationX>
        <locationY>2759</locationY>
        <connector>
            <targetReference>Update_Unit_Page_related_to_Opp</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>After30Days</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Won opp follow-up &amp; review request.  If good review, task Sales Admin to post positive review on FB/Social Media.</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Task_Type__c</field>
            <value>
                <stringValue>Sales Administration</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>task_for_Sending_Paid_Invoice</description>
        <name>task_for_Sending_Paid_Invoice</name>
        <label>task for Sending Paid Invoice</label>
        <locationX>50</locationX>
        <locationY>1631</locationY>
        <connector>
            <targetReference>task_for_Adding_wire_info_to_QBO</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>$Record.CloseDate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>get_User_Office_Manager.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Send Paid Invoice to buyer, copy opp owner; call buyer and introduce self as the transport/logistics contact.</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Task_Type__c</field>
            <value>
                <stringValue>Finance</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>task_for_Sold_post_on_FB_LI</description>
        <name>task_for_Sold_post_on_FB_LI</name>
        <label>task for Sold post on FB/LI</label>
        <locationX>50</locationX>
        <locationY>2207</locationY>
        <connector>
            <targetReference>User_VA_present_D1</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>FB_LI_Day_1_Next_Month_Due_Date</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>get_User_Admin_1.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Post a picture of this unit on a truck, or a picture of it with a &quot;SOLD&quot; stamp on it, to Zadoon&apos;s FB AND LinkedIn Pages.  Create tasks for CM and HB to post on their FB/LinkedIn pages.</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Task_Type__c</field>
            <value>
                <stringValue> Marketing</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <description>task_for_Unlisting_from_MT_IC_CL</description>
        <name>task_for_Unlisting_from_MT_IC_CL</name>
        <label>task for Unlisting from MT/IC/CL</label>
        <locationX>50</locationX>
        <locationY>2543</locationY>
        <connector>
            <targetReference>task_for_Review_Won_Opp_follow_up</targetReference>
        </connector>
        <inputAssignments>
            <field>ActivityDate</field>
            <value>
                <elementReference>TODAY</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>get_User_VA.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>Normal</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Unlist this unit from MT/IC/CL</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Task_Type__c</field>
            <value>
                <stringValue> Marketing</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>get_Broker_sell_record_type_related_to_opp</description>
        <name>get_Broker_sell_record_type_related_to_opp</name>
        <label>get Broker sell record type related to opp</label>
        <locationX>336</locationX>
        <locationY>815</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_Inventory_sell_record_type_related_to_opp</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Opp_Rec_Type_Broker_Sell</elementReference>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Opportunity</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get_Inventory_sell_record_type_related_to_opp</description>
        <name>get_Inventory_sell_record_type_related_to_opp</name>
        <label>get Inventory sell record type related to opp</label>
        <locationX>336</locationX>
        <locationY>935</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Opp_Forecast_Category_Closed_Decision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Opp_Rec_Type_Inventory_Sell</elementReference>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Opportunity</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get_procurement_Opportunity_record_type</description>
        <name>get_procurement_Opportunity_record_type</name>
        <label>get procurement Opportunity record type</label>
        <locationX>336</locationX>
        <locationY>695</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_Broker_sell_record_type_related_to_opp</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Opp_Rec_type_Dev_Name_procurement_opp</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get_User_Admin_1</description>
        <name>get_User_Admin_1</name>
        <label>get User Admin 1</label>
        <locationX>336</locationX>
        <locationY>575</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_procurement_Opportunity_record_type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Admin1</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get_User_Office_Manager</description>
        <name>get_User_Office_Manager</name>
        <label>get User Office Manager</label>
        <locationX>336</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_User_Admin_1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.Office_Manager</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>get_User_VA</description>
        <name>get_User_VA</name>
        <label>get User VA</label>
        <locationX>336</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>get_User_Office_Manager</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Label.VA</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>update_opportunity_final_sale_price</description>
        <name>update_opportunity_final_sale_price</name>
        <label>update opportunity final sale price</label>
        <locationX>182</locationX>
        <locationY>2999</locationY>
        <inputAssignments>
            <field>Zadoon_s_Final_Sale_Price__c</field>
            <value>
                <elementReference>$Record.Total_Cost__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <description>Update_Unit_Page_related_to_Opp</description>
        <name>Update_Unit_Page_related_to_Opp</name>
        <label>Update Unit Page related to Opp</label>
        <locationX>182</locationX>
        <locationY>2879</locationY>
        <connector>
            <targetReference>update_opportunity_final_sale_price</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Product__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Final_Sale_Price__c</field>
            <value>
                <elementReference>$Record.Pro_Forma_Price_Sent__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Sold_Deactivated_Date__c</field>
            <value>
                <elementReference>TODAY</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Unit_Stage__c</field>
            <value>
                <stringValue>Zadoon Sold</stringValue>
            </value>
        </inputAssignments>
        <object>Product2</object>
    </recordUpdates>
    <start>
        <locationX>210</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>get_User_VA</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Opportunity</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
</Flow>
